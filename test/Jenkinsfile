#!/usr/bin/env groovy
// Define variables
List category_list = ["\"Select:selected\"","\"Vegetables\"","\"Fruits\""]
List fruits_list = ["\"Select:selected\"","\"apple\"","\"banana\"","\"mango\""]
List vegetables_list = ["\"Select:selected\"","\"potato\"","\"tomato\"","\"broccoli\""]
List default_item = ["\"Not Applicable\""]
String categories = buildScript(category_list)
String vegetables = buildScript(vegetables_list)
String fruits = buildScript(fruits_list)
String items = populateItems(default_item,vegetables_list,fruits_list)
// Methods to build groovy scripts to populate data
String buildScript(List values){
  return "return $values"
}
String populateItems(List default_item, List vegetablesList, List fruitsList){
return """if(Categories.equals('Vegetables')){
     return $vegetablesList
     }
     else if(Categories.equals('Fruits')){
     return $fruitsList
     }else{
     return $default_item
     }
     """
}
// Properties step to set the Active choice parameters via 
// Declarative Scripting
properties([
//     parameters(
//       [
        
// // [$class: 'ChoiceParameter', 
// //         choiceType: 'PT_SINGLE_SELECT', 
// //         description: 'Select the Env Name from the Dropdown List', 
// //         filterLength: 1, 
// //         filterable: true, 
// //         name: 'Env', 
// //         randomName: 'choice-parameter-5631314439613978', 
// //         script: [
// //             $class: 'GroovyScript', 
// //             fallbackScript: [
// //                 classpath: [], 
// //                 sandbox: false, 
// //                 script: 
// //                     'return[\'Could not get Env\']'
// //             ], 
// //             script: [
// //                 classpath: [], 
// //                 sandbox: false, 
// //                 script: 
// //                     'return["Dev","QA","Stage","Prod"]'
// //             ]
// //         ]
// //     ], 
// //     [$class: 'CascadeChoiceParameter', 
// //         choiceType: 'PT_CHECKBOX', 
// //         description: 'Select Servers', 
// //         filterLength: 1, 
// //         filterable: true, 
// //         name: 'Server', 
// //         randomName: 'choice-parameter-5631314456178619', 
// //         referencedParameters: 'Env', 
// //         script: [
// //             $class: 'GroovyScript', 
// //             fallbackScript: [
// //                 classpath: [], 
// //                 sandbox: false, 
// //                 script: 
// //                     'return[\'Could not get Environment from Env Param\']'
// //             ], 
// //             script: [
// //                 classpath: [], 
// //                 sandbox: false, 
// //                 script: 
// //                     categories
// //             ]
// //         ]
// //     ],
        
//         [$class: 'CascadeChoiceParameter', choiceType: 'PT_CHECKBOX',   name: 'Categories', script: [$class: 'GroovyScript', fallbackScript: [classpath: [], sandbox: false, script: 'return ["ERROR"]'], script: [classpath: [], sandbox: false, script:  categories]]],
//         // choice(name: 'VERSION', choices: ['Vegetables', '1.2.0', 'Fruits'], description: '', script:  categories),
//         [$class: 'CascadeChoiceParameter', choiceType: 'PT_SINGLE_SELECT',name: 'Items', referencedParameters: 'Categories', script: [$class: 'GroovyScript', fallbackScript: [classpath: [], sandbox: false, script: 'return ["error"]'], script: [classpath: [], sandbox: false, script: items]]]
//     ])

 parameters([
                    choice(name:"NeedUpgradePC",choices:['yes','no'],description: "Do you need upgrade your PC"),
                    [$class: 'DynamicReferenceParameter',
                            choiceType: 'ET_FORMATTED_HTML',
                            omitValueField: true,
                            description: 'Please provide a Elastic alias label',
                            name: 'PC_RAM',
                            randomName: 'choice-parameter-5631314456178624',
                            referencedParameters: 'NeedUpgradePC',
                            script: [
                                    $class: 'GroovyScript',
                                    fallbackScript: [
                                            classpath: [],
                                            sandbox: true,
                                            script:
                                                    'return[\'Could not get Environment from Env Param\']'
                                    ],
                                    script: [
                                            classpath: [],
                                            sandbox: true,
                                            script:
                                                    """
                                    if(NeedUpgradePC.equals('yes')) {
                                        inputBox="<input name='value' type='text' value='Kingston 8GB'>"
                                    } else {
                                        inputBox="<input name='value' type='text' value='Kingston 8GB' disabled>"
                                    }
                                """
                                    ]
                            ]
                         ],
                            [$class: 'DynamicReferenceParameter',
                                    choiceType: 'ET_FORMATTED_HTML',
                                    omitValueField: true,
                                    description: 'Please provide a Elastic alias label',
                                    name: 'PC_CPU',
                                    randomName: 'choice-parameter-5631314456178624',
                                    referencedParameters: 'NeedUpgradePC',
                                    script: [
                                            $class: 'GroovyScript',
                                            fallbackScript: [
                                                    classpath: [],
                                                    sandbox: true,
                                                    script:
                                                                                'return[\'Could not get Environment from Env Param\']'
                                            ],
                                            script: [
                                                    classpath: [],
                                                    sandbox: true,
                                                    script:
                                                            """
                                    if(NeedUpgradePC.equals('yes')) {
                                        inputBox="<input name='value' type='text' value='Intel Core i5'>"
                                    } else {
                                        inputBox="<input name='value' type='text' value='Intel Core i5' disabled>"
                                    }
                                """
                                            ]
                                    ]
                            ]

            ])
])

pipeline {
    agent any

  // parameters {
  //     choice(name: 'door_choice',
  //       choices: 'one\ntwo\nthree\nfour',
  //       description: 'What door do you choose?')
  //     booleanParam(name: 'CAN_DANCE',
  //       defaultValue: true,
  //       description: 'Checkbox parameter')
  //     string(name: 'sTrAnGePaRaM',
  //       defaultValue: 'Dance!',
  //       description: 'Do the funky chicken!')
  //   }

    stages {
      stage('Build'){
          steps {
              echo 'Building..'
          }
      }
    }
}